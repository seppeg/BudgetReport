version: '3'

services:
  #kafka/zookeeper for storing events
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:1.0.0
    links:
     - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "booking:1:1,project:1:1"
      KAFKA_LOG_RETENTION_MS: -1 #keep messages forever

  #databases
  bookingdb:
    image: postgres:10.3
    env_file:
      - booking/credentials.env
    environment:
      - POSTGRES_DB=bookingdb
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - booking_data:/var/lib/postgresql/data

  projectdb:
      image: postgres:10.3
      env_file:
        - project/credentials.env
      environment:
        - POSTGRES_DB=projectdb
        - PGDATA=/var/lib/postgresql/data
      volumes:
        - project_data:/var/lib/postgresql/data

  #reverse proxy & load balancer
  traefik:
    image: traefik
    command: --api --docker --docker.domain=localhost --logLevel="DEBUG" --accesslogsfile=/dev/stdout
    ports:
     - "80:80"
     - "443:443"
     - "8080:8080" # web ui
    env_file:
      - .env
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    build: budget-report-ui
    labels:
     - "traefik.backend=website"
     - "traefik.frontend.rule=HostRegexp:{catchall:.*}"
     - "traefik.frontend.priority=1"

  #microservices
  camis:
    build: camis-connection
    container_name: camis
    links:
     - booking
    environment:
      SPRING_PROFILES_ACTIVE: prd
      BOOKING_URL: http://booking:8081
    labels:
     - "traefik.backend=camis"
     - "traefik.frontend.rule=Host:camis.localhost"

  booking:
    build: booking
    container_name: booking
    links:
     - kafka
     - bookingdb
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://bookingdb:5432/bookingdb
    env_file:
     - booking/credentials.env
    labels:
     - "traefik.backend=booking"
     - "traefik.frontend.rule=Host:booking.localhost"

  project:
    build: project
    container_name: project
    links:
     - kafka
     - projectdb
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://projectdb:5432/projectdb
    env_file:
     - project/credentials.env
    labels:
     - "traefik.backend=project"
     - "traefik.frontend.rule=Host:project.localhost"

volumes:
  booking_data:
  project_data: